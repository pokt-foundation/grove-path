{
  "openapi": "3.0.3",
  "info": {
    "title": "Pocket Network",
    "description": "This is the API definition Pocket Network core RPC calls. Pocket is a distributed network that relays data requests and responses to and from any blockchain system. Pocket verifies all relayed data and proportionally rewards the participating nodes with native cryptographic tokens.",
    "termsOfService": "https://pokt.network/terms/",
    "contact": {
      "email": "hola@pokt.network"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/pokt-network/pocket-core/LICENSE.md"
    },
    "version": "0.6.0"
  },
  "externalDocs": {
    "description": "Find out more about Pocket Network",
    "url": "https://pokt.network"
  },
  "servers": [
    {
      "url": "http://localhost:8081/v1"
    }
  ],
  "tags": [
    {
      "name": "version",
      "description": "Version of the Pocket API"
    },
    {
      "name": "client",
      "description": "Dispatch and relay services"
    },
    {
      "name": "query",
      "description": "Blockchain queries"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": ["version"],
        "summary": "Get the current version of the Pocket Network API",
        "responses": {
          "200": {
            "description": "Version",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "0.0.1"
                }
              }
            }
          }
        }
      }
    },
    "/query/account": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Request account at the specified height,  height = 0 is used as latest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryAddressHeight"
              },
              "example": {
                "address": "4920ce1d787c60e2eaeff366c79e8aa2b82525f1",
                "height": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns account at the specified height",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the account"
          }
        }
      }
    },
    "/query/accounts": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Request accounts at the specified height,  height = 0 is used as latest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryPaginatedHeightParams"
              },
              "example": {
                "height": 100,
                "page": 1,
                "per_page": 30
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns accounts at the specified height",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryAccountsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the account"
          }
        }
      }
    },
    "/query/accounttxs": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns all transactions sent by the address; Max per_page = 1000, sort can be \"asc\" or (Default) \"desc\"",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryAccountTXs"
              },
              "example": {
                "address": "197e4d46009879f28f978a90627c7dfeab64b4777afcc24e2b9c3d72b4dada22",
                "height": 99,
                "page": 1,
                "per_page": 1000,
                "sort": "desc"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryAccountTXsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the transaction information"
          }
        }
      }
    },
    "/query/allParams": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns the parameters at the specified height,  height = 0 is used as latest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryHeight"
              },
              "example": {
                "height": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllParams"
                },
                "example": {
                  "app_params": [
                    {
                      "param_key": "application/ParticipationRateOn",
                      "param_value": "false"
                    },
                    {
                      "param_key": "application/StabilityAdjustment",
                      "param_value": "0"
                    },
                    {
                      "param_key": "application/ApplicationStakeMinimum",
                      "param_value": "1000000"
                    },
                    {
                      "param_key": "application/AppUnstakingTime",
                      "param_value": "1814400000000000"
                    },
                    {
                      "param_key": "application/BaseRelaysPerPOKT",
                      "param_value": "100"
                    },
                    {
                      "param_key": "application/MaxApplications",
                      "param_value": "9223372036854775807"
                    },
                    {
                      "param_key": "application/MaximumChains",
                      "param_value": "15"
                    }
                  ],
                  "auth_params": [
                    {
                      "param_key": "auth/TxSigLimit",
                      "param_value": "7"
                    },
                    {
                      "param_key": "auth/MaxMemoCharacters",
                      "param_value": "256"
                    },
                    {
                      "param_key": "auth/FeeMultipliers",
                      "param_value": "{\"fee_multiplier\":null,\"default\":\"1\"}"
                    }
                  ],
                  "gov_params": [
                    {
                      "param_key": "gov/daoOwner",
                      "param_value": "640d766bd7b712b04582a557f072b377dd489540"
                    },
                    {
                      "param_key": "gov/acl",
                      "param_value": "{\"type\":\"gov/non_map_acl\",\"value\":[{\"acl_key\":\"auth/MaxMemoCharacters\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"auth/TxSigLimit\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"gov/daoOwner\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"gov/acl\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pos/StakeDenom\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pocketcore/SupportedBlockchains\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pos/DowntimeJailDuration\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pos/SlashFractionDoubleSign\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pos/SlashFractionDowntime\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"auth/FeeMultipliers\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"application/ApplicationStakeMinimum\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pocketcore/ClaimExpiration\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pocketcore/SessionNodeCount\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pocketcore/MinimumNumberOfProofs\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pocketcore/ReplayAttackBurnMultiplier\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pos/MaxValidators\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pos/ProposerPercentage\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"application/StabilityAdjustment\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"application/AppUnstakingTime\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"application/ParticipationRateOn\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pos/MaxEvidenceAge\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pos/MinSignedPerWindow\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pos/StakeMinimum\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pos/UnstakingTime\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pos/RelaysToTokensMultiplier\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"application/BaseRelaysPerPOKT\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pocketcore/ClaimSubmissionWindow\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pos/DAOAllocation\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pos/SignedBlocksWindow\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pos/BlocksPerSession\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"application/MaxApplications\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"gov/upgrade\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"application/MaximumChains\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pos/MaximumChains\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"},{\"acl_key\":\"pos/MaxJailedBlocks\",\"address\":\"640d766bd7b712b04582a557f072b377dd489540\"}]}"
                    },
                    {
                      "param_key": "gov/upgrade",
                      "param_value": "{\"type\":\"gov/upgrade\",\"value\":{\"Height\":\"10000\",\"Version\":\"2.0.0\"}}"
                    }
                  ],
                  "node_params": [
                    {
                      "param_key": "pos/DowntimeJailDuration",
                      "param_value": "600000000000"
                    },
                    {
                      "param_key": "pos/MinSignedPerWindow",
                      "param_value": "0.500000000000000000"
                    },
                    {
                      "param_key": "pos/StakeMinimum",
                      "param_value": "1000000"
                    },
                    {
                      "param_key": "pos/MaximumChains",
                      "param_value": "15"
                    },
                    {
                      "param_key": "pos/SignedBlocksWindow",
                      "param_value": "100"
                    },
                    {
                      "param_key": "pos/DAOAllocation",
                      "param_value": "10"
                    },
                    {
                      "param_key": "pos/MaxValidators",
                      "param_value": "5000"
                    },
                    {
                      "param_key": "pos/BlocksPerSession",
                      "param_value": "25"
                    },
                    {
                      "param_key": "pos/ProposerPercentage",
                      "param_value": "1"
                    },
                    {
                      "param_key": "pos/RelaysToTokensMultiplier",
                      "param_value": "1000"
                    },
                    {
                      "param_key": "pos/SlashFractionDoubleSign",
                      "param_value": "0.050000000000000000"
                    },
                    {
                      "param_key": "pos/SlashFractionDowntime",
                      "param_value": "0.010000000000000000"
                    },
                    {
                      "param_key": "pos/StakeDenom",
                      "param_value": "upokt"
                    },
                    {
                      "param_key": "pos/UnstakingTime",
                      "param_value": "1814400000000000"
                    },
                    {
                      "param_key": "pos/MaxEvidenceAge",
                      "param_value": "120000000000"
                    },
                    {
                      "param_key": "pos/MaxJailedBlocks",
                      "param_value": "1000"
                    }
                  ],
                  "pocket_params": [
                    {
                      "param_key": "pocketcore/SupportedBlockchains",
                      "param_value": "[\"0001\"]"
                    },
                    {
                      "param_key": "pocketcore/ClaimExpiration",
                      "param_value": "100"
                    },
                    {
                      "param_key": "pocketcore/MinimumNumberOfProofs",
                      "param_value": "5"
                    },
                    {
                      "param_key": "pocketcore/SessionNodeCount",
                      "param_value": "5"
                    },
                    {
                      "param_key": "pocketcore/ClaimSubmissionWindow",
                      "param_value": "3"
                    },
                    {
                      "param_key": "pocketcore/ReplayAttackBurnMultiplier",
                      "param_value": "3"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the node information"
          }
        }
      }
    },
    "/query/app": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Rquest the app at the specified height,  height = 0 is used as latest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryAddressHeight"
              },
              "example": {
                "address": "4920ce1d787c60e2eaeff366c79e8aa2b82525f1",
                "height": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the app at the specified height,  height = 0 is used as latest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the applications"
          }
        }
      }
    },
    "/query/apps": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Request a page of applications known at the specified height and staking status, empty (\"\") staking_status returns all apps, page < 1 returns the first page, per_page < 1 returns 10000 elements per page",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryHeightAndApplicationsOpts"
              },
              "example": {
                "height": 2,
                "opts": {
                  "staking_status": 2,
                  "page": 1,
                  "per_page": 100
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the list of all applications known at the specified height and staking status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryAppsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the applications"
          }
        }
      }
    },
    "/query/balance": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Request the balance of the specified address at the specified height,  height = 0 is used as latest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryAddressHeight"
              },
              "example": {
                "address": "1b1973906ee85993e994422eddeab89f385a00a4",
                "height": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the balance of the specified address at the specified height,  height = 0 is used as latest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryBalanceResponse"
                },
                "example": {
                  "balance": 1000000000
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve Information"
          }
        }
      }
    },
    "/query/block": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns the block structure at the specified height,  height = 0 is used as latest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryBlock"
              },
              "example": {
                "height": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Block data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryBlockResponse"
                },
                "example": {
                  "block": {
                    "data": {
                      "txs": null
                    },
                    "evidence": {
                      "evidence": null
                    },
                    "header": {
                      "app_hash": "",
                      "chain_id": "pocket-test",
                      "consensus_hash": "90B6C64F69FDCF9746F038BD2D27DFFFAE814E19EA6F974C740896AA62EDDA1D",
                      "data_hash": "",
                      "evidence_hash": "",
                      "height": "1",
                      "last_block_id": {
                        "hash": "",
                        "parts": {
                          "hash": "",
                          "total": "0"
                        }
                      },
                      "last_commit_hash": "",
                      "last_results_hash": "",
                      "next_validators_hash": "AC2B8D79A789E27A51E809BED90DCA8EA0E640CA134F9ADDD1B4510E8CE8C1C0",
                      "num_txs": "0",
                      "proposer_address": "AD8EAF52981A102068AA1FE4108E5520542078C3",
                      "time": "2020-03-10T00:04:35.159615Z",
                      "total_txs": "0",
                      "validators_hash": "AC2B8D79A789E27A51E809BED90DCA8EA0E640CA134F9ADDD1B4510E8CE8C1C0",
                      "version": {
                        "app": "0",
                        "block": "10"
                      }
                    },
                    "last_commit": {
                      "block_id": {
                        "hash": "",
                        "parts": {
                          "hash": "",
                          "total": "0"
                        }
                      },
                      "precommits": null
                    }
                  },
                  "block_meta": {
                    "block_id": {
                      "hash": "D0A2AB1DE2FB356AEBF4CD9B18EA6E6754323512196858557787358C279E0473",
                      "parts": {
                        "hash": "581F3CCD645EB60EC4F16575F1C73393C9405C76E42C6C5D14938875FE4912F5",
                        "total": "1"
                      }
                    },
                    "header": {
                      "app_hash": "",
                      "chain_id": "pocket-test",
                      "consensus_hash": "90B6C64F69FDCF9746F038BD2D27DFFFAE814E19EA6F974C740896AA62EDDA1D",
                      "data_hash": "",
                      "evidence_hash": "",
                      "height": "1",
                      "last_block_id": {
                        "hash": "",
                        "parts": {
                          "hash": "",
                          "total": "0"
                        }
                      },
                      "last_commit_hash": "",
                      "last_results_hash": "",
                      "next_validators_hash": "AC2B8D79A789E27A51E809BED90DCA8EA0E640CA134F9ADDD1B4510E8CE8C1C0",
                      "num_txs": "0",
                      "proposer_address": "AD8EAF52981A102068AA1FE4108E5520542078C3",
                      "time": "2020-03-10T00:04:35.159615Z",
                      "total_txs": "0",
                      "validators_hash": "AC2B8D79A789E27A51E809BED90DCA8EA0E640CA134F9ADDD1B4510E8CE8C1C0",
                      "version": {
                        "app": "0",
                        "block": "10"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the block information"
          }
        }
      }
    },
    "/query/blocktxs": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns all transactions at a certain block height; Max per_page = 1000, sort can be \"asc\" or (Default) \"desc\"",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryBlockTXs"
              },
              "example": {
                "height": 99,
                "page": 1,
                "per_page": 1000,
                "sort": "desc"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryBlockTXsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the transaction information"
          }
        }
      }
    },
    "/query/unconfirmedtxs": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns all unconfirmed transactions handled by the mempool; Max per_page = 1000\".",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryUnconfirmedTXs"
              },
              "example": {
                "page": 1,
                "per_page": 1000
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Unconfirmed Transaction list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryUnconfirmedTXsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the unconfirmed transactions information"
          }
        }
      }
    },
    "/query/height": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns the current height",
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Block height",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryHeightResponse"
                },
                "example": {
                  "height": 10
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the block height information"
          }
        }
      }
    },
    "/query/param": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns the parameters at the specified height,  height = 0 is used as latest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryHeightAndKey"
              },
              "example": {
                "height": 2,
                "key": "application/ParticipationRateOn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleParam"
                },
                "example": {
                  "param_key": "application/ParticipationRateOn",
                  "param_value": "false"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the node information"
          }
        }
      }
    },
    "/query/nodeclaim": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns the node pending claim for specific session",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryNodeReceipt"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Node claim",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/query/nodeclaims": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns the list of all pending claims submitted by node address at height,  height = 0 is used as latest, address = \"\" will return all claims for a height",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryPaginatedHeightAndAddrParams"
              },
              "example": {
                "address": "0xA5DE6D4184016708c1040c355F1c958192276DB5",
                "height": 2,
                "page": 1,
                "per_page": 1
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Node claims",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryNodeClaimsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the node proof information"
          }
        }
      }
    },
    "/query/signinginfo": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns the list of the Tendermint Validator signing information for nodes. No address = all signing infos in the state",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryPaginatedHeightAndAddrParams"
              },
              "example": {
                "address": "0xA5DE6D4184016708c1040c355F1c958192276DB5",
                "height": 2,
                "page": 1,
                "per_page": 1
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Signing Info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuerySigningInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/query/node": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns the node at the specified height,  height = 0 is used as latest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryAddressHeight"
              },
              "example": {
                "address": "0xA5DE6D4184016708c1040c355F1c958192276DB5",
                "height": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Node details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Node"
                },
                "example": {
                  "address": "05d98fbedf63cd4b4e337ef488ec2ad7e5072cb2",
                  "chains": [
                    "36f028580bb02cc8272a9a020f4200e346e276ae664e45ee80745574e2f5ab80"
                  ],
                  "jailed": false,
                  "public_key": "bac2790f5786d4e016ed1f03a54205ba99b949e6a3c4b4641317977dfedfce79",
                  "service_url": "0.0.0.0:8081",
                  "status": 2,
                  "tokens": "1000000000000000",
                  "unstaking_time": "0001-01-01T00:00:00Z"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the node information"
          }
        }
      }
    },
    "/query/nodes": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Request a page of nodes known at the specified height and with options, empty options returns all validators, page < 1 returns the first page, per_page < 1 returns 10000 elements per page",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryHeightAndValidatorsOpts"
              },
              "example": {
                "opts": {
                  "staking_status": 2,
                  "page": 1,
                  "per_page": 100,
                  "blockchain": "",
                  "jailed_status": 1
                },
                "height": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the list of all nodes known at the specified height and staking status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryNodesResponse"
                },
                "example": {
                  "result": [
                    {
                      "address": "98a18a38aa6826a55dccce19f607e3171cf1436e",
                      "public_key": "d6b3785f00961059d2a5c6448cae7ddb02475de79c22261687a92cb905ff0de9",
                      "jailed": false,
                      "status": 2,
                      "tokens": "1000000000000000",
                      "service_url": "0.0.0.0:8081",
                      "chains": [
                        "36f028580bb02cc8272a9a020f4200e346e276ae664e45ee80745574e2f5ab80"
                      ],
                      "unstaking_time": "0001-01-01T00:00:00Z"
                    }
                  ],
                  "page": 1,
                  "total_pages": 100
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the nodes' information"
          }
        }
      }
    },
    "/query/supply": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns the list of node params specified in the height,  height = 0 is used as latest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryHeight"
              },
              "example": {
                "height": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Pocket Network parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuerySupplyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the supply information"
          }
        }
      }
    },
    "/query/supportedchains": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns the list Network Identifiers supported by the network at the specified height,  height = 0 is used as latest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryHeight"
              },
              "example": {
                "height": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Pocket Network parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuerySupportedChainsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the application information"
          }
        }
      }
    },
    "/query/state": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns the transaction by the hash",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryHeight"
              },
              "example": {
                "height": "2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction data",
            "content": {
              "application/json": {
                "example": {
                  "app_hash": "",
                  "app_state": {
                    "application": {
                      "applications": [],
                      "exported": true,
                      "params": {
                        "app_stake_minimum": "1000000",
                        "base_relays_per_pokt": "167",
                        "max_applications": "9223372036854775807",
                        "maximum_chains": "15",
                        "participation_rate_on": false,
                        "stability_adjustment": "0",
                        "unstaking_time": "1814000000000000"
                      }
                    },
                    "auth": {
                      "accounts": [
                        {
                          "type": "posmint/Account",
                          "value": {
                            "address": "009c0b262c6150d7dca0304acc0abc59d8086b0d",
                            "coins": [
                              {
                                "amount": "0",
                                "denom": "upokt"
                              }
                            ],
                            "public_key": {
                              "type": "crypto/ed25519_public_key",
                              "value": "5760934260f6893935a568eae97de00b21dfe539f9aa3b7d1de9d8824352a8f5"
                            }
                          }
                        }
                      ],
                      "params": {
                        "fee_multipliers": {
                          "default": "1",
                          "fee_multiplier": null
                        },
                        "max_memo_characters": "75",
                        "tx_sig_limit": "8"
                      },
                      "supply": [
                        {
                          "amount": "650000000150000",
                          "denom": "upokt"
                        }
                      ]
                    },
                    "gov": {
                      "DAO_Tokens": "50000000000000",
                      "params": {
                        "acl": [
                          {
                            "acl_key": "application/ApplicationStakeMinimum",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "application/AppUnstakingTime",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "application/BaseRelaysPerPOKT",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "application/MaxApplications",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "application/MaximumChains",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "application/ParticipationRateOn",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "application/StabilityAdjustment",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "auth/MaxMemoCharacters",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "auth/TxSigLimit",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "gov/acl",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "gov/daoOwner",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "gov/upgrade",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pocketcore/ClaimExpiration",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "auth/FeeMultipliers",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pocketcore/ReplayAttackBurnMultiplier",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pos/ProposerPercentage",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pocketcore/ClaimSubmissionWindow",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pocketcore/MinimumNumberOfProofs",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pocketcore/SessionNodeCount",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pocketcore/SupportedBlockchains",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pos/BlocksPerSession",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pos/DAOAllocation",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pos/DowntimeJailDuration",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pos/MaxEvidenceAge",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pos/MaximumChains",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pos/MaxJailedBlocks",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pos/MaxValidators",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pos/MinSignedPerWindow",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pos/RelaysToTokensMultiplier",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pos/SignedBlocksWindow",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pos/SlashFractionDoubleSign",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pos/SlashFractionDowntime",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pos/StakeDenom",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pos/StakeMinimum",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          },
                          {
                            "acl_key": "pos/UnstakingTime",
                            "address": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4"
                          }
                        ],
                        "dao_owner": "a83172b67b5ffbfcb8acb95acc0fd0466a9d4bc4",
                        "upgrade": {
                          "Height": "0",
                          "Version": "0"
                        }
                      }
                    },
                    "pocketcore": {
                      "claims": null,
                      "params": {
                        "claim_expiration": "120",
                        "minimum_number_of_proofs": "10",
                        "proof_waiting_period": "3",
                        "replay_attack_burn_multiplier": "3",
                        "session_node_count": "5",
                        "supported_blockchains": ["0001", "0021"]
                      }
                    },
                    "pos": {
                      "exported": true,
                      "missed_blocks": {},
                      "params": {
                        "dao_allocation": "10",
                        "downtime_jail_duration": "3600000000000",
                        "max_evidence_age": "120000000000",
                        "max_jailed_blocks": "37960",
                        "max_validators": "5000",
                        "maximum_chains": "15",
                        "min_signed_per_window": "6.000000000000000000",
                        "proposer_allocation": "1",
                        "relays_to_tokens_multiplier": "0",
                        "session_block_frequency": "4",
                        "signed_blocks_window": "10",
                        "slash_fraction_double_sign": "0.050000000000000000",
                        "slash_fraction_downtime": "0.000001000000000000",
                        "stake_denom": "upokt",
                        "stake_minimum": "15000000000",
                        "unstaking_time": "1814000000000000"
                      },
                      "prevState_total_power": "76084066",
                      "prevState_validator_powers": [
                        {
                          "Address": "40c8973967b8d6b1123029819cad20fd44580e9e",
                          "Power": "7641951"
                        },
                        {
                          "Address": "5bcae50364952a5fa3a8363f93f2adffc9eff42e",
                          "Power": "7641951"
                        },
                        {
                          "Address": "8afc6b4195e3fd59fa3aa8bab65b2b7c497cedf9",
                          "Power": "7641951"
                        },
                        {
                          "Address": "8dd722c42425783b50db707995f841b3c7ccc827",
                          "Power": "7641951"
                        },
                        {
                          "Address": "913fed2298bc8af74989bc56d94e2e4ca95a6519",
                          "Power": "7641951"
                        },
                        {
                          "Address": "a8943929b30cbc3e7a30c2de06b385bcf874134b",
                          "Power": "7641951"
                        },
                        {
                          "Address": "c6dfe12a4ff2bc2b44c83c791853b6edb6c5eb58",
                          "Power": "7641951"
                        },
                        {
                          "Address": "d46556719200aee73fc7446731ae58496978548d",
                          "Power": "7641951"
                        },
                        {
                          "Address": "e09ce22e0abfd8129776128c0c9b3836024d8c6e",
                          "Power": "7641951"
                        },
                        {
                          "Address": "e74727d0ba34d9f7f6f583cb4a87dbe91d692c5f",
                          "Power": "7306507"
                        }
                      ],
                      "previous_proposer": "913fed2298bc8af74989bc56d94e2e4ca95a6519",
                      "signing_infos": {
                        "009c0b262c6150d7dca0304acc0abc59d8086b0d": {
                          "address": "009c0b262c6150d7dca0304acc0abc59d8086b0d",
                          "index_offset": "0",
                          "jailed_blocks_counter": "2",
                          "jailed_until": "1970-01-01T00:00:00Z",
                          "missed_blocks_counter": "0",
                          "start_height": "0"
                        },
                        "016b81f94f552ecdc1ab9da437ae06686fca3674": {
                          "address": "016b81f94f552ecdc1ab9da437ae06686fca3674",
                          "index_offset": "0",
                          "jailed_blocks_counter": "2",
                          "jailed_until": "1970-01-01T00:00:00Z",
                          "missed_blocks_counter": "0",
                          "start_height": "0"
                        },
                        "01f1f9010e52c71b567f4759700df164b6074b04": {
                          "address": "01f1f9010e52c71b567f4759700df164b6074b04",
                          "index_offset": "0",
                          "jailed_blocks_counter": "2",
                          "jailed_until": "1970-01-01T00:00:00Z",
                          "missed_blocks_counter": "0",
                          "start_height": "0"
                        }
                      },
                      "validators": [
                        {
                          "address": "009c0b262c6150d7dca0304acc0abc59d8086b0d",
                          "chains": ["0001", "0021"],
                          "jailed": true,
                          "public_key": "5760934260f6893935a568eae97de00b21dfe539f9aa3b7d1de9d8824352a8f5",
                          "service_url": "https://1.pockettuzem.com:443",
                          "status": 2,
                          "tokens": "17500000000",
                          "unstaking_time": "2020-11-10T00:00:00Z"
                        },
                        {
                          "address": "016b81f94f552ecdc1ab9da437ae06686fca3674",
                          "chains": ["0001", "0021"],
                          "jailed": true,
                          "public_key": "4c51be986b3b81b00935a10fabcfcf78bc7068885e89f0ede96cfa3d98262ce7",
                          "service_url": "https://pocketnode2.lamref.cf:443",
                          "status": 2,
                          "tokens": "17500000000",
                          "unstaking_time": "2020-11-10T00:00:00Z"
                        },
                        {
                          "address": "01f1f9010e52c71b567f4759700df164b6074b04",
                          "chains": ["0001", "0021"],
                          "jailed": true,
                          "public_key": "9acb7cb34b06e9573471f65191e507909c7b0a49b5296463c1c5be8faf747c90",
                          "service_url": "https://node2.protofire.io:443",
                          "status": 2,
                          "tokens": "15005000000",
                          "unstaking_time": "2020-11-10T00:00:00Z"
                        },
                        {
                          "address": "03655eabc3a7337daa303576aa9bbe726f2320c8",
                          "chains": ["0001", "0021"],
                          "jailed": true,
                          "public_key": "5ab705112162d3b19d57e967e2eac03491914abc6cb11a00275242e8874580c7",
                          "service_url": "https://node2.musicabaile.com:443",
                          "status": 2,
                          "tokens": "208219000000",
                          "unstaking_time": "2021-05-15T00:00:00Z"
                        },
                        {
                          "address": "04493410acf1e28ce254c36de8187fa29a4917c0",
                          "chains": ["0001", "0021"],
                          "jailed": true,
                          "public_key": "3a6ae53636b3ec5708fbc41ffe8ec2fd952d9b9d5ef9ee22a325486dd08a7306",
                          "service_url": "https://node1.noderunnerpkt.xyz:443",
                          "status": 2,
                          "tokens": "15723270000",
                          "unstaking_time": "2020-11-10T00:00:00Z"
                        },
                        {
                          "address": "fe2006c9b958937923b31868ed265f4fa061cf9a",
                          "chains": ["0001", "0021"],
                          "jailed": true,
                          "public_key": "301c25510103bddbd9b213a1d54e52c8ba826ca066882efd831034bee586c1e8",
                          "service_url": "https://nodo1.misnodos.company:443",
                          "status": 2,
                          "tokens": "510000000000",
                          "unstaking_time": "2021-05-15T00:00:00Z"
                        }
                      ]
                    }
                  },
                  "chain_id": "<Input New ChainID>",
                  "consensus_params": {
                    "block": {
                      "max_bytes": "4000000",
                      "max_gas": "-1",
                      "time_iota_ms": "1"
                    },
                    "evidence": {
                      "max_age": "1000000"
                    },
                    "validator": {
                      "pub_key_types": ["ed25519"]
                    }
                  },
                  "genesis_time": "0001-01-01T00:00:00Z"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the transaction information"
          }
        }
      }
    },
    "/query/tx": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns the transaction by the hash",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryTX"
              },
              "example": {
                "hash": "0x197e4d46009879f28f978a90627c7dfeab64b4777afcc24e2b9c3d72b4dada22",
                "prove": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryTXResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the transaction information"
          }
        }
      }
    },
    "/query/unconfirmedtx": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns the unconfirmed transaction by the hash",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryUnconfirmedTX"
              },
              "example": {
                "hash": "0x197e4d46009879f28f978a90627c7dfeab64b4777afcc24e2b9c3d72b4dada22"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Unconfirmed Transaction data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryUnconfirmedTXResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the unconfirmed transaction information"
          }
        }
      }
    },
    "/query/upgrade": {
      "post": {
        "tags": ["query"],
        "requestBody": {
          "description": "Returns upgrade information specified height,  height = 0 is used as latest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryHeight"
              },
              "example": {
                "height": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Upgrade Response Information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpgradeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the supply information"
          }
        }
      }
    },
    "/query/pocketparams": {
      "post": {
        "deprecated": true,
        "tags": ["query"],
        "requestBody": {
          "description": "Returns the pocket parameters at the specified height,  height = 0 is used as latest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryHeight"
              },
              "example": {
                "height": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Pocket Network parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PocketParams"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the application information"
          }
        }
      }
    },
    "/query/nodeparams": {
      "post": {
        "deprecated": true,
        "tags": ["query"],
        "requestBody": {
          "description": "Returns the node parameters at the specified height,  height = 0 is used as latest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryHeight"
              },
              "example": {
                "height": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Node parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeParams"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the node information"
          }
        }
      }
    },
    "/query/appparams": {
      "post": {
        "deprecated": true,
        "tags": ["query"],
        "requestBody": {
          "description": "Returns the app parameters at the specified height,  height = 0 is used as latest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryHeight"
              },
              "example": {
                "height": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Application parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationParams"
                }
              }
            }
          },
          "400": {
            "description": "Failed to retrieve the application information"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LocalNode": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          }
        }
      },
      "Chain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "basic_auth": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          }
        }
      },
      "ABCIEvent": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ABCIMessageLog": {
        "type": "object",
        "properties": {
          "msg_index": {
            "type": "integer",
            "format": "uint32",
            "description": "Ordered index of the log message"
          },
          "success": {
            "type": "boolean",
            "description": "Success or failure?"
          },
          "log": {
            "type": "string",
            "description": "Full text of the log"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ABCIEvent"
            }
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "coins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coin"
            }
          },
          "public_key": {
            "type": "string"
          }
        }
      },
      "Coin": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "denom": {
            "type": "string"
          }
        }
      },
      "Application": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "The hex address of the application"
          },
          "public_key": {
            "type": "string",
            "description": "The hex public key of the application"
          },
          "jailed": {
            "type": "boolean",
            "description": "Has the application been jailed from staked status",
            "default": false
          },
          "status": {
            "type": "integer",
            "description": "Application status"
          },
          "chains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Blockchains supported"
          },
          "staked_tokens": {
            "type": "string",
            "description": "How many tokens has this node staked in uPOKT"
          },
          "max_relays": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of relays supported"
          },
          "unstaking_time": {
            "type": "string",
            "description": "If unstaking, the minimum time for the validator to complete unstaking"
          }
        }
      },
      "ApplicationParams": {
        "type": "object",
        "properties": {
          "unstaking_time": {
            "type": "string",
            "description": "duration of unstaking"
          },
          "max_applications": {
            "type": "integer",
            "format": "uint64",
            "description": "maximum number of applications"
          },
          "app_stake_minimum": {
            "type": "integer",
            "format": "int64",
            "description": "minimum amount needed to stake as an application"
          },
          "base_relays_per_pokt": {
            "type": "integer",
            "format": "int64",
            "description": "base relays per POKT coin staked"
          },
          "stability_adjustment": {
            "type": "integer",
            "format": "int64",
            "description": "the stability adjustment from the governance"
          },
          "participation_rate_on": {
            "type": "boolean",
            "description": "the participation rate affects the amount minted based on staked ratio"
          }
        }
      },
      "Applications": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Application"
        }
      },
      "Block": {
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/BlockHeader"
          },
          "data": {
            "type": "string",
            "description": "Data hash of the block"
          },
          "evidence": {
            "type": "string",
            "description": "Evidence hash"
          },
          "lastCommit": {
            "$ref": "#/components/schemas/Commit"
          }
        }
      },
      "Blockchain": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the blockchain"
          },
          "net_id": {
            "type": "string",
            "description": "Network identifier"
          }
        }
      },
      "BlockHeader": {
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/Consensus"
          },
          "chain_id": {
            "type": "string"
          },
          "height": {
            "type": "integer",
            "format": "int64"
          },
          "time": {
            "type": "string"
          },
          "num_txs": {
            "type": "integer",
            "format": "int64"
          },
          "total_txs": {
            "type": "integer",
            "format": "int64"
          },
          "last_block_id": {
            "$ref": "#/components/schemas/BlockID"
          },
          "last_commit_hash": {
            "type": "string"
          },
          "data_hash": {
            "type": "string"
          },
          "validators_hash": {
            "type": "string"
          },
          "next_validators_hash": {
            "type": "string"
          },
          "consensus_hash": {
            "type": "string"
          },
          "app_hash": {
            "type": "string"
          },
          "last_results_hash": {
            "type": "string"
          },
          "evidence_hash": {
            "type": "string"
          },
          "proposer_address": {
            "type": "string"
          }
        }
      },
      "BlockID": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          },
          "parts": {
            "$ref": "#/components/schemas/PartSetHeader"
          }
        }
      },
      "BlockMeta": {
        "type": "object",
        "properties": {
          "block_id": {
            "$ref": "#/components/schemas/BlockID"
          },
          "blockHeader": {
            "$ref": "#/components/schemas/BlockHeader"
          }
        }
      },
      "Commit": {
        "type": "object",
        "properties": {
          "block_id": {
            "$ref": "#/components/schemas/BlockID"
          },
          "commit_signature": {
            "$ref": "#/components/schemas/CommitSignature"
          }
        }
      },
      "CommitSignature": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "height": {
            "type": "integer",
            "format": "int64"
          },
          "round": {
            "type": "integer"
          },
          "block_id": {
            "$ref": "#/components/schemas/BlockID"
          },
          "timestamp": {
            "type": "string"
          },
          "validator_address": {
            "type": "string"
          },
          "validator_index": {
            "type": "integer",
            "format": "int32"
          },
          "signature": {
            "type": "string"
          }
        }
      },
      "Consensus": {
        "type": "object",
        "properties": {
          "block": {
            "type": "integer",
            "format": "int64"
          },
          "app": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Node": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "The hex address of the validator"
          },
          "chains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Blockchains supported"
          },
          "jailed": {
            "type": "boolean",
            "description": "Has the validator been jailed from staked status",
            "default": false
          },
          "public_key": {
            "type": "string",
            "description": "The validator public hex key"
          },
          "service_url": {
            "type": "string",
            "description": "The validator service url"
          },
          "status": {
            "type": "integer",
            "description": "Validator status"
          },
          "tokens": {
            "type": "string",
            "description": "How many tokens has this node staked in uPOKT"
          },
          "unstaking_time": {
            "type": "string",
            "description": "If unstaking, the minimum time for the validator to complete unstaking"
          }
        }
      },
      "AllParams": {
        "type": "object",
        "properties": {
          "app_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SingleParam",
              "description": "the APP module params"
            }
          },
          "node_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SingleParam",
              "description": "the POS module params"
            }
          },
          "pocket_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SingleParam",
              "description": "the Pocket params"
            }
          },
          "gov_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SingleParam",
              "description": "the GOV module params"
            }
          },
          "auth_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SingleParam",
              "description": "the Auth module params"
            }
          }
        }
      },
      "SingleParam": {
        "type": "object",
        "properties": {
          "param_key": {
            "type": "string"
          },
          "param_value": {
            "type": "string"
          }
        }
      },
      "NodeParams": {
        "type": "object",
        "properties": {
          "unstaking_time": {
            "type": "string",
            "format": "date-time",
            "description": "How much time must pass between the begin_unstaking_tx and the node transitioning to unstaked status"
          },
          "max_validators": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of validators in the network at any given block"
          },
          "stake_denom": {
            "type": "string",
            "description": "The monetary denomination of the coins in the network `uPOKT`"
          },
          "stake_minimum": {
            "type": "integer",
            "format": "int64",
            "description": "Minimum amount of uPOKT needed to stake in the network as a node"
          },
          "session_block_frequency": {
            "type": "integer",
            "format": "int64",
            "description": "How many blocks are in a session"
          },
          "dao_allocation": {
            "type": "integer",
            "format": "int64",
            "description": "Award percentage of the mint for the DAO"
          },
          "proposer_allocation": {
            "type": "integer",
            "format": "int32",
            "description": "Award percentage of the mint for the proposer"
          },
          "max_evidence_age": {
            "type": "string",
            "description": "Maximum age of tendermint evidence that is still valid (currently not implemented in Cosmos or Pocket-Core)"
          },
          "signed_blocks_window": {
            "type": "integer",
            "format": "int64",
            "description": "Window of time in blocks (unit) used for signature verification -> specifically in not signing (missing) blocks"
          },
          "min_signed_per_window": {
            "type": "integer",
            "format": "int64",
            "description": "Minimum number of blocks the node must sign per window"
          },
          "downtime_jail_duration": {
            "type": "integer",
            "format": "int64",
            "description": "Minimum amount of time node must spend in jail after missing blocks"
          },
          "slash_fraction_double_sign": {
            "type": "integer",
            "format": "int64",
            "description": "The factor of which a node is slashed for a double sign"
          },
          "slash_fraction_downtime": {
            "type": "integer",
            "format": "int64",
            "description": "The factor of which a node is slashed for a double sign"
          }
        }
      },
      "PartSetHeader": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "hash": {
            "type": "string"
          }
        }
      },
      "PocketParams": {
        "type": "object",
        "properties": {
          "session_node_count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of nodes in this session"
          },
          "proof_waiting_period": {
            "type": "integer",
            "format": "int64",
            "description": "Proof waiting period"
          },
          "supported_blockchains": {
            "type": "array",
            "description": "Supported blockchains",
            "items": {
              "type": "string"
            }
          },
          "claim_expiration": {
            "type": "integer",
            "format": "int64",
            "description": "Claim expiration"
          }
        }
      },
      "RelayProof": {
        "type": "object",
        "properties": {
          "request_hash": {
            "type": "string",
            "description": "request hash identifier"
          },
          "entropy": {
            "type": "integer",
            "format": "int64",
            "description": "Entropy value to add uniqueness"
          },
          "session_block_height": {
            "type": "integer",
            "format": "int64",
            "description": "Height of the session"
          },
          "servicer_pub_key": {
            "type": "string",
            "description": "Servicer public hex public key"
          },
          "blockchain": {
            "type": "string",
            "description": "Blockchain hex string"
          },
          "aat": {
            "$ref": "#/components/schemas/AAT"
          },
          "signature": {
            "type": "string",
            "description": "client's signature in hex"
          }
        }
      },
      "AAT": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          },
          "app_pub_key": {
            "type": "string",
            "description": "Application hex public key"
          },
          "client_pub_key": {
            "type": "string",
            "description": "Application hex public key associated with a client"
          },
          "signature": {
            "type": "string",
            "description": "Application's signature in hex"
          }
        }
      },
      "RelayHeader": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "RelayMetadata": {
        "description": "metadata for the relay request",
        "type": "object",
        "properties": {
          "block_height": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RelayPayload": {
        "description": "the data payload of the request",
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "The actual data of the request string for the external chain"
          },
          "method": {
            "type": "string",
            "description": "The HTTP CRUD method"
          },
          "path": {
            "type": "string",
            "description": "The REST path"
          },
          "headers": {
            "$ref": "#/components/schemas/RelayHeader"
          }
        }
      },
      "SessionHeader": {
        "type": "object",
        "properties": {
          "app_public_key": {
            "type": "string",
            "description": "Application hex public key associated with a client"
          },
          "chain": {
            "type": "string",
            "description": "Network Identified in hex"
          },
          "session_height": {
            "type": "integer",
            "format": "int64",
            "description": "Height of the session"
          }
        }
      },
      "SimpleProof": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "index": {
            "type": "integer",
            "format": "int64"
          },
          "leaf_hash": {
            "type": "string"
          },
          "aunts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "StoredReceipt": {
        "type": "object",
        "properties": {
          "session_header": {
            "$ref": "#/components/schemas/SessionHeader"
          },
          "servicer_address": {
            "type": "string"
          },
          "total_relays": {
            "type": "integer",
            "format": "int64"
          },
          "evidence_type": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MsgClaim": {
        "type": "object",
        "properties": {
          "expiration_height": {
            "type": "integer",
            "format": "int64",
            "description": "height when the claim expires"
          },
          "evidence_type": {
            "type": "integer",
            "format": "int64",
            "description": "Arbitrary Enum"
          },
          "from_address": {
            "type": "string",
            "format": "hex bytes"
          },
          "total_proofs": {
            "type": "integer"
          },
          "session_header": {
            "$ref": "#/components/schemas/SessionHeader"
          },
          "merkle_root": {
            "$ref": "#/components/schemas/HashSum"
          }
        }
      },
      "SigningInfo": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "format": "hex",
            "description": "operator address of the signing info"
          },
          "index_offset": {
            "type": "integer",
            "format": "int64",
            "description": "The counter for the signing info (reset to 0 after SignedBlocksWindow elapses)"
          },
          "jailed_blocks_counter": {
            "type": "integer",
            "format": "int64",
            "description": "The number of blocks jailed (reset to 0 after unjail)"
          },
          "jailed_until": {
            "type": "string",
            "format": "time.Time",
            "description": "The time the node can be unjailed"
          },
          "missed_blocks_counter": {
            "type": "integer",
            "format": "int64",
            "description": "The number of blocks missed within SignedBlocksWindow (can be decremented after the fact if new signature information/evidence is found)"
          },
          "start_height": {
            "type": "integer",
            "format": "int64",
            "description": "The origin height of the node (when it first joined the network)"
          }
        }
      },
      "HashSum": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string",
            "description": "byte array"
          },
          "sum": {
            "type": "integer",
            "description": "uint64"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string",
            "description": "Hash of the transaction"
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Blockheight of the transaction"
          },
          "index": {
            "type": "integer",
            "format": "int64"
          },
          "tx_result": {
            "$ref": "#/components/schemas/TxResult"
          },
          "tx": {
            "type": "string",
            "description": "Raw data of the transaction"
          },
          "proof": {
            "$ref": "#/components/schemas/TXProof"
          },
          "stdTx": {
            "$ref": "#/components/schemas/StdTx"
          }
        }
      },
      "StdTx": {
        "type": "object",
        "properties": {
          "entropy": {
            "type": "integer"
          },
          "fee": {
            "$ref": "#/components/schemas/Coin"
          },
          "memo": {
            "type": "string"
          },
          "msg": {
            "type": "object"
          },
          "signature": {
            "type": "object",
            "properties": {
              "pub_key": {
                "type": "string"
              },
              "signature": {
                "type": "string"
              }
            }
          }
        }
      },
      "TxResult": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "string"
          },
          "log": {
            "type": "string"
          },
          "info": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "codespace": {
            "type": "string"
          },
          "signer": {
            "type": "string"
          },
          "recipient": {
            "type": "string",
            "description": "The receiver of the transaction, will be null if no receiver"
          },
          "message_type": {
            "type": "string",
            "description": "The type of the transaction, can be \"app_stake\", \"app_begin_unstake\", \"stake_validator\", \"begin_unstake_validator\", \"unjail_validator\", \"send\", \"upgrade\", \"change_param\", \"dao_tranfer\", \"claim\", or \"proof\""
          }
        }
      },
      "TXProof": {
        "type": "object",
        "description": "Proof of the transaction",
        "properties": {
          "root_hash": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "proof": {
            "$ref": "#/components/schemas/SimpleProof"
          }
        }
      },
      "UnconfirmedTransaction": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string",
            "description": "Hash of the transaction"
          },
          "message_type": {
            "type": "string",
            "description": "Transaction type like the one provide on Transaction tx_result.message_type"
          },
          "stdTx": {
            "$ref": "#/components/schemas/StdTx"
          }
        }
      },
      "QueryAddressHeight": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int64"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "QueryBalanceResponse": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "QueryBlock": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "QueryBlockResponse": {
        "type": "object",
        "properties": {
          "block": {
            "$ref": "#/components/schemas/Block"
          },
          "block_meta": {
            "$ref": "#/components/schemas/BlockMeta"
          }
        }
      },
      "QueryDispatchRequest": {
        "$ref": "#/components/schemas/SessionHeader"
      },
      "QueryDispatchResponse": {
        "type": "object",
        "properties": {
          "session": {
            "$ref": "#/components/schemas/Session"
          },
          "block_height": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Session": {
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/SessionHeader"
          },
          "key": {
            "type": "string",
            "format": "byte"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          }
        }
      },
      "QueryHeightAndKey": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int64"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "QueryHeight": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "QueryHeightResponse": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "QueryNodeReceipt": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Node address"
          },
          "blockchain": {
            "type": "string"
          },
          "app_pubkey": {
            "type": "string",
            "description": "Application hex public key associated with a client"
          },
          "session_block_height": {
            "type": "integer",
            "format": "int64",
            "description": "Session block height"
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Height of the session"
          }
        }
      },
      "QueryNodeReceiptsResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoredReceipt"
            }
          },
          "page": {
            "type": "integer",
            "format": "int64",
            "description": "current page"
          },
          "total_pages": {
            "type": "integer",
            "format": "int64",
            "description": "maximum amount of pages"
          }
        }
      },
      "QueryNodeClaimsResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MsgClaim"
            }
          },
          "page": {
            "type": "integer",
            "format": "int64",
            "description": "current page"
          },
          "total_pages": {
            "type": "integer",
            "format": "int64",
            "description": "maximum amount of pages"
          }
        }
      },
      "QuerySigningInfoResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SigningInfo"
            }
          },
          "page": {
            "type": "integer",
            "format": "int64",
            "description": "current page"
          },
          "total_pages": {
            "type": "integer",
            "format": "int64",
            "description": "maximum amount of pages"
          }
        }
      },
      "QueryNodesResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          },
          "page": {
            "type": "integer",
            "format": "int64",
            "description": "current page"
          },
          "total_pages": {
            "type": "integer",
            "format": "int64",
            "description": "maximum amount of pages"
          }
        }
      },
      "QueryAppsResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application"
            }
          },
          "page": {
            "type": "integer",
            "format": "int64",
            "description": "current page"
          },
          "total_pages": {
            "type": "integer",
            "format": "int64",
            "description": "maximum amount of pages"
          }
        }
      },
      "QueryAccountsResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          },
          "page": {
            "type": "integer",
            "format": "int64",
            "description": "current page"
          },
          "total_pages": {
            "type": "integer",
            "format": "int64",
            "description": "maximum amount of pages"
          }
        }
      },
      "QueryRawTXRequest": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "raw_hex_bytes": {
            "type": "string"
          }
        }
      },
      "QueryRawTXResponse": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Blockheight of the transaction"
          },
          "txhash": {
            "type": "string",
            "description": "Hash of the transaction"
          },
          "codespace": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "uint32",
            "description": "Result code returned (0 is OK; everything else is error)"
          },
          "data": {
            "type": "string",
            "description": "Raw transaction data"
          },
          "raw_log": {
            "type": "string",
            "description": "Raw transaction log"
          },
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ABCIMessageLog"
            },
            "description": "ABCI Tendermint Logs"
          },
          "info": {
            "type": "string"
          },
          "gas_wanted": {
            "type": "integer",
            "format": "int64"
          },
          "gas_used": {
            "type": "integer",
            "format": "int64"
          },
          "Tx": {
            "type": "object"
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp of the transaction"
          }
        }
      },
      "QueryRelayRequest": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/RelayPayload"
          },
          "meta": {
            "$ref": "#/components/schemas/RelayMetadata"
          },
          "proof": {
            "$ref": "#/components/schemas/RelayProof"
          }
        }
      },
      "QuerySimRequest": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/RelayPayload"
          },
          "relay_network_id": {
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/RelayMetadata"
          },
          "proof": {
            "$ref": "#/components/schemas/RelayProof"
          }
        }
      },
      "QueryRelayResponse": {
        "type": "object",
        "properties": {
          "signature": {
            "type": "string",
            "description": "Signature from the node in hex"
          },
          "payload": {
            "type": "string",
            "description": "string response to relay"
          }
        }
      },
      "QueryErrorRelayResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Amino JSON Error String"
          },
          "dispatch": {
            "$ref": "#/components/schemas/QueryDispatchResponse"
          }
        }
      },
      "QueryChallengeRequest": {
        "type": "object",
        "properties": {
          "majority_responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryRelayResponse"
            },
            "minItems": 1,
            "maxItems": 2
          },
          "minority_response": {
            "$ref": "#/components/schemas/QueryRelayResponse"
          },
          "address": {
            "description": "reporter address",
            "type": "string",
            "format": "byte"
          }
        }
      },
      "QueryChallengeResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          }
        }
      },
      "QueryHeightAndValidatorsOpts": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "per_page": {
            "type": "integer",
            "format": "int64"
          },
          "staking_status": {
            "type": "integer",
            "enum": ["1 // unstaking", "2 // staked"]
          },
          "jailed_status": {
            "type": "integer",
            "enum": ["1 // jailed", "2 // unjailed"]
          },
          "blockchain": {
            "type": "string"
          }
        }
      },
      "QueryHeightAndApplicationsOpts": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "per_page": {
            "type": "integer",
            "format": "int64"
          },
          "staking_status": {
            "type": "integer",
            "enum": ["1 // unstaking", "2 // staked"]
          },
          "blockchain": {
            "type": "string"
          }
        }
      },
      "QuerySupplyResponse": {
        "type": "object",
        "properties": {
          "node_staked": {
            "type": "integer",
            "format": "int64",
            "description": "Amount staked by the node in uPOKT"
          },
          "app_staked": {
            "type": "integer",
            "format": "int64",
            "description": "Amount staked by the app in uPOKT"
          },
          "dao": {
            "type": "integer",
            "format": "int64",
            "description": "DAO amount in uPOKT"
          },
          "total_staked": {
            "type": "integer",
            "format": "int64",
            "description": "Total amount staked in uPOKT"
          },
          "total_unstaked": {
            "type": "integer",
            "format": "int64",
            "description": "Total amount unstaked in uPOKT"
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total amount in uPOKT"
          }
        }
      },
      "QuerySupportedChainsResponse": {
        "type": "object",
        "properties": {
          "supported_chains": {
            "type": "array",
            "description": "Supported blockchains",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "QueryTX": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          },
          "prove": {
            "type": "boolean"
          }
        }
      },
      "QueryTXResponse": {
        "type": "object",
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/Transaction"
          }
        }
      },
      "QueryPaginatedHeightParams": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "per_page": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "QueryUnconfirmedTX": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          }
        }
      },
      "QueryUnconfirmedTXResponse": {
        "type": "object",
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/UnconfirmedTransaction"
          }
        }
      },
      "QueryPaginatedHeightAndAddrParams": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int64"
          },
          "address": {
            "type": "string"
          },
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "per_page": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "QueryAccountTXs": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "prove": {
            "type": "boolean"
          },
          "received": {
            "type": "boolean"
          },
          "order": {
            "type": "string"
          }
        },
        "required": ["address"]
      },
      "QueryAccountTXsResponse": {
        "type": "object",
        "properties": {
          "txs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "page_count": {
            "type": "integer"
          },
          "total_txs": {
            "type": "integer"
          }
        }
      },
      "QueryBlockTXs": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "prove": {
            "type": "boolean"
          },
          "order": {
            "type": "string"
          }
        },
        "required": ["height"]
      },
      "QueryBlockTXsResponse": {
        "type": "object",
        "properties": {
          "txs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "page_count": {
            "type": "integer"
          },
          "total_txs": {
            "type": "integer"
          }
        }
      },
      "QueryUnconfirmedTXs": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          }
        }
      },
      "QueryUnconfirmedTXsResponse": {
        "type": "object",
        "properties": {
          "txs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnconfirmedTransaction"
            }
          },
          "page_count": {
            "type": "integer"
          },
          "total_txs": {
            "type": "integer"
          }
        }
      },
      "UpgradeResponse": {
        "type": "object",
        "properties": {
          "Height": {
            "type": "string"
          },
          "Version": {
            "type": "string"
          }
        }
      }
    }
  }
}
