{
  "openapi": "3.0.0",
  "info": {
    "title": "Ethereum RPC API",
    "description": "Ethereum blockchain JSON-RPC API spec designed for the `eth_getTransactionByBlockHashAndIndex` method.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://eth-mainnet.rpc.grove.city/v1/7ebb2846",
      "description": "Ethereum Mainnet RPC Server"
    }
  ],
  "paths": {
    "/": {
      "post": {
        "operationId": "eth_getTransactionByBlockHashAndIndex",
        "summary": "Returns information about a transaction by block hash and transaction index position.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                  },
                  "method": {
                    "type": "string",
                    "enum": ["eth_getTransactionByBlockHashAndIndex"],
                    "example": "eth_getTransactionByBlockHashAndIndex"
                  },
                  "params": {
                    "type": "array",
                    "items": [
                      {
                        "type": "string",
                        "pattern": "^0x[a-fA-F0-9]{64}$",
                        "description": "DATA, 32 Bytes - hash of a block."
                      },
                      {
                        "type": "string",
                        "description": "QUANTITY - integer of the transaction index position."
                      }
                    ],
                    "minItems": 2,
                    "maxItems": 2,
                    "example": [
                      "0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331",
                      "0x0"
                    ]
                  },
                  "id": {
                    "$ref": "#/components/schemas/IdType"
                  }
                },
                "required": ["jsonrpc", "method", "params", "id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "IdType": {
        "oneOf": [
          {
            "type": "integer",
            "example": 1
          },
          {
            "type": "string",
            "example": "myId"
          }
        ]
      },
      "SuccessResponse": {
        "type": "object",
        "description": "Object - A transaction object, or null when no transaction was found.",
        "properties": {
          "jsonrpc": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/IdType"
          },
          "result": {
            "type": "object",
            "description": "Transaction object",
            "properties": {
              "blockHash": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{64}$",
                "description": "DATA, 32 Bytes - hash of the block where this transaction was in. null when its pending.",
                "nullable": true
              },
              "blockNumber": {
                "type": "string",
                "description": "QUANTITY - block number where this transaction was in. null when its pending.",
                "nullable": true
              },
              "from": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{40}$",
                "description": "DATA, 20 Bytes - address of the sender."
              },
              "gas": {
                "type": "string",
                "description": "QUANTITY - gas provided by the sender."
              },
              "gasPrice": {
                "type": "string",
                "description": "QUANTITY - gas price provided by the sender in Wei."
              },
              "hash": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{64}$",
                "description": "DATA, 32 Bytes - hash of the transaction."
              },
              "input": {
                "type": "string",
                "description": "DATA - the data send along with the transaction."
              },
              "nonce": {
                "type": "string",
                "description": "QUANTITY - the number of transactions made by the sender prior to this one."
              },
              "to": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{40}$",
                "description": "DATA, 20 Bytes - address of the receiver. null when its a contract creation transaction.",
                "nullable": true
              },
              "transactionIndex": {
                "type": "string",
                "description": "QUANTITY - integer of the transactions index position in the block. null when its pending.",
                "nullable": true
              },
              "value": {
                "type": "string",
                "description": "QUANTITY - value transferred in Wei."
              },
              "v": {
                "type": "string",
                "description": "QUANTITY - ECDSA recovery id"
              },
              "r": {
                "type": "string",
                "description": "QUANTITY - ECDSA signature r"
              },
              "s": {
                "type": "string",
                "description": "QUANTITY - ECDSA signature s"
              }
            },
            "nullable": true,
            "example": {
              "blockHash": "0x1d59ff54b1eb26b013ce3cb5fc9dab3705b415a67127a003c3e61eb445bb8df2",
              "blockNumber": "0x5daf3b",
              "from": "0xa7d9ddbe1f17865597fbd27ec712455208b6b76d",
              "gas": "0xc350",
              "gasPrice": "0x4a817c800",
              "hash": "0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b",
              "input": "0x68656c6c6f21",
              "nonce": "0x15",
              "to": "0xf02c1c8e6114b1dbe8937a39260b5b0a374432bb",
              "transactionIndex": "0x41",
              "value": "0xf3dbb76162000",
              "v": "0x25",
              "r": "0x1b5e176d927f8e9ab405058b2d2457392da3e20f328b16ddabcebc33eaac5fea",
              "s": "0x4ba69724e8f69de52f0125ad8b3c5c2cef33019bac3249e2c0a2192766d1721c"
            }
          }
        },
        "required": ["jsonrpc", "id", "result"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/IdType"
          },
          "jsonrpc": {
            "type": "string"
          },
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "integer"
              },
              "message": {
                "type": "string",
                "example": "Method not found"
              },
              "data": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              }
            },
            "required": ["code", "message"]
          }
        },
        "required": ["id", "jsonrpc", "error"]
      }
    }
  }
}
